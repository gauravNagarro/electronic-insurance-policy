buildscript {
	project.ext {
        bootVersion = '1.5.4.RELEASE'
		cloudVersion = '1.0.0.RELEASE'
		seurityVersion = '2.0.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.bootVersion}"
        classpath 'se.transmode.gradle:gradle-docker:1.2'
		classpath "io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE"
    }
}
apply plugin:'base'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'java'
apply plugin: 'docker'

apply plugin: "io.spring.dependency-management"

dependencyManagement {
  imports {
	mavenBom 'org.springframework.cloud:spring-cloud-starter-parent:1.0.0.RELEASE'
  }
}

springBoot {
	requiresUnpack = ['com.netflix.eureka:eureka-core','com.netflix.eureka:eureka-client']
}

jar {
    baseName = 'webservice-registry'
    version =  '0.0.1'
}

repositories { 
	mavenCentral() 
	jcenter()
}
dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:${project.bootVersion}")    
    compile("org.springframework.boot:spring-boot-starter-actuator:${project.bootVersion}")
	compile("org.springframework.cloud:spring-cloud-config-client:${project.cloudVersion}")
	compile("org.springframework.cloud:spring-cloud-starter-eureka-server:${project.cloudVersion}") 

    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile 'org.springframework:spring-test:4.0.6.RELEASE'
}

group = 'electronic-insurance-policy'
mainClassName = 'org.nagarro.microservice.registry.Application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

distDocker {
    exposePort 8080
    setEnvironment 'JAVA_OPTS', '-Dspring.profiles.active=docker'
}

docker {
    useApi true
    hostUrl 'http://localhost:2375'
    baseImage = 'java:8'
}

bootRun {
    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=4400,suspend=n','-Dspring.profiles.active=dev']
}

run {
    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=4400,suspend=n','-Dspring.profiles.active=dev']
}

task createWrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

